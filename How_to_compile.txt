=============================================
 Guide for compilation of G+Smo and shapeopt
=============================================
NOTE: it is important that everything is done in the appropiate folder, such that you dont mess up the gismo folder with build file.. If you ar unlucky to build in the gismo folder you can clean up by running a command (DONT REMEMBER NAME ATM)

Go to you git directory, e.g.

	$ mkdir git
	$ cd git

Clone G+SMO from GitHub

	$ git clone https://github.com/gismo/gismo.git

Switch to the Improved Expressions branch and fetch code

	$ git checkout ImproveExpressions
	$ git fetch (note: perhaps this step is not necessary)


Make a build folder that is seperate and go into this folder

	$ mkdir build
	$ cd build

Run cmake from the build folder linking to the source code

	$ cmake ../gismo

Run ccmake to choose the necessary options

	$ ccmake .

Choose options:

	CMAKE_BUILD_TYPE : RelWithDebInfo (To allow debugging, only use Release mode for fast execution when program is correct)

	GISMO_WITH_IPOPT : ON		(Gets and compiles Ipopt to do optimization)
	GISMO_BUILD_EXAMPLES : ON   (Builds examples)

Press [c] and then [g] to generate

Use the new settings by running cmake

	$ cmake .

Build with make 

	$ make -j 3 (To use 3 cores)

------ Note ------

If there is an issue with IpOpt you can download and unpack the file

  https://www.coin-or.org/download/source/Ipopt/Ipopt-3.12.6.tgz

In a folder, and run 

	$ ./configure 
	$ make -j3 install
		
		(or ./configure --with-blas="/usr/lib64/libblas.so.3")

and in ccmake choose
	
	IpOpt_DIR = /path/to/IpOpt/
	(eg. IpOpt_DIR = /zhome/2b/e/77581/git/IpOpt/Ipopt-3.12.6 )

------------------



=================================== 
Using shapeopt
=================================== 

Get the code from git

	$ git clone https://github.com/gismo/shapeopt.git

Now we need to run cmake.

------ Note ------

You need c++ > 11 to compile the code. If cmake version is >3.1 you can write 

	set(CMAKE_CXX_STANDARD, 14) 

in the CMakeList.txt file, if cmake version is <3.1 you can write
	
	set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11")

------------------



=================================
Version
=================================

Perhaps ImprovedExpression branch is too new. One git hash that worked the 21/11 2019 is

649d6b79475e82cf1079bb053f0e122e4bab60cc

to use this write

	$ git reset --hard 649d6b79475e82cf1079bb053f0e122e4bab60cc




