=============================================
 Guide for compilation of G+Smo and shapeopt
=============================================
NOTE: it is important that everything is done in the appropiate folder, such that you dont mess up the gismo folder with build file.. If you ar unlucky to build in the gismo folder you can clean up by running a command (DONT REMEMBER NAME ATM)

Go to you git directory, e.g.

	$ mkdir git
	$ cd git

Clone G+SMO from GitHub

	$ git clone https://github.com/gismo/gismo.git

Switch to the Improved Expressions branch and fetch code

	$ git checkout ImproveExpressions
	$ git fetch (note: perhaps this step is not necessary)


Make a build folder that is seperate and go into this folder

	$ mkdir build
	$ cd build

Run cmake from the build folder linking to the source code

	$ cmake ../gismo

Run ccmake to choose the necessary options

	$ ccmake .

Choose options:

	CMAKE_BUILD_TYPE : RelWithDebInfo (To allow debugging, only use Release mode for fast execution when program is correct)

	GISMO_WITH_IPOPT : ON		(Gets and compiles Ipopt to do optimization)
	GISMO_BUILD_EXAMPLES : ON   (Builds examples)

Press [c] and then [g] to generate

Use the new settings by running cmake

	$ cmake .

Perhaps with gcc as compiler and c++14 (on the cluster for instant)

	$ cmake . -DCMAKE_CXX_STANDARD=14 -DCMAKE_CXX_COMPILER=gcc

Build with make 

	$ make -j 3 (To use 3 cores)

------ Note ------

If there is an issue with IpOpt you can download the file

  	https://www.coin-or.org/download/source/Ipopt/Ipopt-3.12.6.tgz

and put it in the folder

	extensions/gsIpopt/IpOpt-prefix/src/

then in the file 

	../gismo/extensions/gsIpopt/CMakeLists.txt

comment out the line

   	#URL http://www.coin-or.org/download/source/Ipopt/Ipopt-${IPOPT_VER}.tgz 

and replace with the

	URL ${CMAKE_CURRENT_BINARY_DIR}/IpOpt-prefix/src/IpOpt-${IPOPT_VER}.tgz

to tell gismo to look for the tgz file here and not on coin-or.org/

------------------



=================================== 
Using shapeopt
=================================== 

Get the code from git

	$ git clone https://github.com/gismo/shapeopt.git

Now we need to run cmake.

------ Note ------

You need c++ > 11 to compile the code. If cmake version is >3.1 you can write 

	set(CMAKE_CXX_STANDARD, 14) 

in the CMakeList.txt file, if cmake version is <3.1 you can write
	
	set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11")
	set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14")

On the DTU cluster you have to load the gcc/5.4.0 compiler as

	$ module load gcc/5.4.0

------------------

again we have to set 

	CMAKE_BUILD_TYPE = RelWithDebInfo
	CMAKE_CXX_STANDARD = 14


=================================
Compiling on the cluster
=================================

We need to use the gcc/5.4.0 module

	$ module load gcc/5.4.0

Then after building gismo in the folder build, here are the options to set in ccmake:

    CMAKE_CXX_COMPILER               gcc
    CMAKE_C_COMPILER                 gcc
    CMAKE_C_COMPILER_WITH_PATH       gcc
	
Use the same ones in shapeopt.
Remember to use the same build type for shapeopt and gismo
Remember to turn on gismo_with_ipopt.

Now in shape opt remember to update gismo_dir to point at ../build

Also you might need the following additional flags:

	-lstdc++ -lm -lcurl



=================================
Version
=================================

Perhaps ImprovedExpression branch is too new. One git hash that worked the 21/11 2019 is

649d6b79475e82cf1079bb053f0e122e4bab60cc

to use this write

	$ git reset --hard 649d6b79475e82cf1079bb053f0e122e4bab60cc




